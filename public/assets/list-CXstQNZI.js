import{am as v,J as _,S as g,ar as k,as as w,H as L,ag as S,c as l,p as c,o as r,F as h,j as T,d as x,t as i,R as A,f as B,W as E}from"./index-BJJ6YbMy.js";const N={key:0},V={class:"element"},j={key:0},F=Object.assign({name:"I18nList"},{__name:"list",props:{list:{type:Array,required:!0}},setup(n){const u=n,s=v([]),f=_(null),{formatListToParts:y}=g(),m=()=>{if(s.value=new Array(u.list.length+1).fill(""),u.list.length===0)return;const a=[...f.value.querySelectorAll(":scope > .element")].map(e=>e.innerText),d=y(a);let t=0;for(const e of d)if(e.type==="literal")s.value[t]+=e.value;else{if(t===a.length||e.value!==a[t])throw new Error("element mismatch");t+=1}};let o=!1;k(()=>{m(),o=!0,E(()=>{o=!1})}),w(()=>{o||m()});const p=L(()=>S(s));return(a,d)=>n.list.length!==0?(r(),l("span",{key:0,ref_key:"el",ref:f,class:"i18n-list"},[(r(!0),l(h,null,T(n.list,(t,e)=>(r(),l(h,{key:e},[s.value[e]?(r(),l("span",N,i(s.value[e]),1)):c("",!0),x("span",V,[A(a.$slots,"default",{value:t,index:e},()=>[B(i(t),1)])])],64))),128)),p.value?(r(),l("span",j,i(p.value),1)):c("",!0)],512)):c("",!0)}});export{F as _};
